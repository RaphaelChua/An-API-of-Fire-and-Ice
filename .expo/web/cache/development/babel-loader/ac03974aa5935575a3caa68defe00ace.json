{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raphaelchua/Documents/GITHUB_PROJECTS/An-API-of-Fire-and-Ice/src/screens/HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport ContainerList from \"../components/ListComponent\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { booksAction, charactersAction } from \"../_actions\";\n\nvar HomeScreen = function (_Component) {\n  _inherits(HomeScreen, _Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onClick = function (character) {\n      _this.props.setCharacter(character);\n\n      _this.props.navigation.navigate('Details', character);\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var characterId = item.url.split(\"/\");\n      var avatarUrl = \"https://i.picsum.photos/id/\" + characterId[characterId.length - 1] + \"/200/300.jpg\";\n      return React.createElement(ListItem, {\n        title: item.name,\n        leftAvatar: {\n          source: {\n            uri: avatarUrl\n          }\n        },\n        bottomDivider: true,\n        chevron: true,\n        onPress: function onPress() {\n          return _this.onClick(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.loadingItems = function () {\n      return React.createElement(Spinner, {\n        visible: true,\n        textContent: \"Loading ...\",\n        textStyle: {\n          color: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this.renderLoading.bind(_assertThisInitialized(_this));\n\n    _this.onClick.bind(_assertThisInitialized(_this));\n\n    _this.state = {\n      characters: [],\n      initialData: [],\n      page: 1,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.getList().then(function () {\n        _this2.props.getCharacterList(_this2.props.bookCharacters);\n      });\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      if (this.props.loading) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.characterList && this.props.characterList.length == 0) {\n        this.loadingItems();\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }\n      }, React.createElement(Spinner, {\n        visible: true,\n        textContent: \"Loading ...\",\n        textStyle: {\n          color: '#FFF'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      }), React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.props.characterList,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }\n      }));\n    }\n  }]);\n\n  return HomeScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\n\nfunction mapStateToProps(state) {\n  var _state$Books = state.Books,\n      bookCharacters = _state$Books.bookCharacters,\n      loading = _state$Books.loading,\n      error = _state$Books.error;\n  var _state$characterList = state.characterList,\n      characterList = _state$characterList.characterList,\n      cLoading = _state$characterList.cLoading,\n      cError = _state$characterList.cError;\n  return {\n    bookCharacters: bookCharacters,\n    characterList: characterList,\n    loading: loading,\n    error: error,\n    cLoading: cLoading,\n    cError: cError\n  };\n}\n\nvar actionCreators = {\n  getList: booksAction.getList,\n  getCharacter: charactersAction.getCharacter,\n  getCharacterList: charactersAction.getCharacterList,\n  setCharacter: charactersAction.setCharacter\n};\nexport default connect(mapStateToProps, actionCreators)(HomeScreen);","map":{"version":3,"sources":["/Users/raphaelchua/Documents/GITHUB_PROJECTS/An-API-of-Fire-and-Ice/src/screens/HomeScreen.js"],"names":["React","Component","ListItem","connect","ContainerList","Spinner","booksAction","charactersAction","HomeScreen","props","onClick","character","setCharacter","navigation","navigate","keyExtractor","item","index","toString","renderItem","characterId","url","split","avatarUrl","length","name","source","uri","loadingItems","color","renderLoading","bind","state","characters","initialData","page","count","getList","then","getCharacterList","bookCharacters","loading","characterList","styles","StyleSheet","create","container","flex","backgroundColor","mapStateToProps","Books","error","cLoading","cError","actionCreators","getCharacter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { View,Text, StyleSheet, ScrollView, FlatList } from \"react-native\"\nimport { ListItem} from 'react-native-elements';\nimport {connect} from 'react-redux';\nimport ContainerList from \"../components/ListComponent\"\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nimport {booksAction, charactersAction} from '../_actions';\n\nclass HomeScreen extends Component{\n  constructor(props){\n    super(props);\n    this.renderLoading.bind(this);\n    this.onClick.bind(this);\n    // this.loadMore.bind(this);\n    this.state ={\n      characters:[],\n      initialData:[],\n      page:1,\n      count:0\n    }\n  }\n\n  //https://i.picsum.photos/id/100/200/300.jpg \n\n  componentDidMount(){\n    this.props.getList().then(()=>{\n      this.props.getCharacterList(this.props.bookCharacters)\n    })\n  }\n\n\n  renderLoading(){\n    if(this.props.loading){\n      // console.log(\"HIHIHIH\" +this.props.loading)\n      // return <Spinner />\n    }\n  }\n\n  onClick = (character)=>{\n    // console.log(character)\n    this.props.setCharacter(character)\n    this.props.navigation.navigate('Details',character);\n  }\n\n\n  keyExtractor = (item,index) => index.toString();\n\n  renderItem = ({ item,index }) =>{\n    // var characterId = item.url.slice(49,item.url.length)\n    var characterId= item.url.split(\"/\")\n    var avatarUrl = `https://i.picsum.photos/id/${characterId[characterId.length-1]}/200/300.jpg`\n   return( \n    <ListItem\n      title={item.name}\n      leftAvatar={{source:{uri:avatarUrl}}}\n      bottomDivider\n      chevron\n      onPress={()=>this.onClick(item)}\n    />\n  )\n}\n    loadingItems=()=>{\n      return(\n        <Spinner\n        visible={true}\n        textContent={\"Loading ...\"}\n        textStyle={{ color: '#FFF' }}\n    />\n      )\n    }\n\n    render(){   \n        if(this.props.characterList && this.props.characterList.length == 0){\n\n          this.loadingItems()\n\n        }\n        return(\n        \n           <View>  \n             <Spinner\n        visible={true}\n        textContent={\"Loading ...\"}\n        textStyle={{ color: '#FFF' }}\n    />      \n               <FlatList \n               keyExtractor = {this.keyExtractor}\n               data={this.props.characterList}\n               renderItem={this.renderItem}\n               />\n           </View>\n        )\n        }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n    },\n  });\n\n\nfunction mapStateToProps(state){\n  const {bookCharacters,loading,error} = state.Books;\n  const {characterList,cLoading, cError} = state.characterList\n  // console.log(bookCharacters)\n    return {\n      bookCharacters,\n      characterList,\n      loading,\n      error,\n      cLoading,\n      cError,\n      \n    };\n}\n\nconst actionCreators = {\n    getList: booksAction.getList,\n    getCharacter: charactersAction.getCharacter,\n    getCharacterList: charactersAction.getCharacterList,\n    setCharacter:charactersAction.setCharacter,\n    \n}\n\nexport default connect(mapStateToProps,actionCreators)(HomeScreen);"]},"metadata":{},"sourceType":"module"}