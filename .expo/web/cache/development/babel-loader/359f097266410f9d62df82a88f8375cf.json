{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport axios from 'axios';\n\nvar HTTPClient = function () {\n  function HTTPClient() {\n    var _this = this;\n\n    _classCallCheck(this, HTTPClient);\n\n    this.baseURL = '';\n    this.baseURL = \"https://anapioficeandfire.com/api\";\n    this.axiosClient = axios.create();\n    this.token = '';\n    this.axiosClient.interceptors.request.use(function (request) {\n      var method = request.method.toUpperCase();\n      var url = request.url.replace(_this.baseURL, '');\n      return request;\n    }, function (error) {\n      console.log(error);\n      return Promise.reject(error);\n    });\n    this.axiosClient.interceptors.response.use(function (response) {\n      var status = response.status,\n          statusText = response.statusText;\n      return response;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n  }\n\n  _createClass(HTTPClient, [{\n    key: \"SetAuthenticationCallback\",\n    value: function SetAuthenticationCallback(callback) {\n      this.callback = callback;\n    }\n  }, {\n    key: \"SetAuthenticationToken\",\n    value: function SetAuthenticationToken(token) {\n      this.token = token;\n      this.axiosClient.defaults.headers.common['Authentication-Token'] = token;\n    }\n  }, {\n    key: \"Get\",\n    value: function Get(url) {\n      return this.axiosClient.get(\"\" + url);\n    }\n  }, {\n    key: \"Patch\",\n    value: function Patch(url) {\n      return this.axiosClient.patch(\"\" + url);\n    }\n  }, {\n    key: \"Post\",\n    value: function Post(url, data) {\n      return this.axiosClient.post(\"\" + url, data);\n    }\n  }, {\n    key: \"Put\",\n    value: function Put(url, data) {\n      return this.axiosClient.put(this.baseURL + \"/\" + url, data);\n    }\n  }, {\n    key: \"Delete\",\n    value: function Delete(url) {\n      return this.axiosClient.delete(this.baseURL + \"/\" + url);\n    }\n  }]);\n\n  return HTTPClient;\n}();\n\nvar httpClient = new HTTPClient();\nexport default httpClient;","map":{"version":3,"sources":["/Users/raphaelchua/Documents/GITHUB_PROJECTS/An-API-of-Fire-and-Ice/src/helpers/HTTPClient.js"],"names":["axios","HTTPClient","baseURL","axiosClient","create","token","interceptors","request","use","method","toUpperCase","url","replace","error","console","log","Promise","reject","response","status","statusText","callback","defaults","headers","common","get","patch","data","post","put","delete","httpClient"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,U;AAGF,wBAAa;AAAA;;AAAA;;AAAA,SAFbC,OAEa,GAFH,EAEG;AACT,SAAKA,OAAL;AACA,SAAKC,WAAL,GAAmBH,KAAK,CAACI,MAAN,EAAnB;AACA,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKF,WAAL,CAAiBG,YAAjB,CAA8BC,OAA9B,CAAsCC,GAAtC,CACI,UAACD,OAAD,EAAY;AACR,UAAME,MAAM,GAAGF,OAAO,CAACE,MAAR,CAAeC,WAAf,EAAf;AACA,UAAMC,GAAG,GAAGJ,OAAO,CAACI,GAAR,CAAYC,OAAZ,CAAoB,KAAI,CAACV,OAAzB,EAAiC,EAAjC,CAAZ;AAEA,aAAOK,OAAP;AACH,KANL,EAOI,UAACM,KAAD,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,KAVL;AAcA,SAAKV,WAAL,CAAiBG,YAAjB,CAA8BY,QAA9B,CAAuCV,GAAvC,CACI,UAACU,QAAD,EAAc;AAAA,UACFC,MADE,GACqBD,QADrB,CACFC,MADE;AAAA,UACMC,UADN,GACqBF,QADrB,CACME,UADN;AAGV,aAAOF,QAAP;AACH,KALL,EAMI,UAACL,KAAD,EAAW;AACP,aAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,KARL;AAWH;;;;8CAEyBQ,Q,EAAS;AAC/B,WAAKA,QAAL,GAAgBA,QAAhB;AACH;;;2CAEsBhB,K,EAAM;AACzB,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKF,WAAL,CAAiBmB,QAAjB,CAA0BC,OAA1B,CAAkCC,MAAlC,CAAyC,sBAAzC,IAAmEnB,KAAnE;AACH;;;wBAEGM,G,EAAK;AACP,aAAO,KAAKR,WAAL,CAAiBsB,GAAjB,MAAwBd,GAAxB,CAAP;AACD;;;0BAEKA,G,EAAK;AACT,aAAO,KAAKR,WAAL,CAAiBuB,KAAjB,MAA0Bf,GAA1B,CAAP;AACD;;;yBAGIA,G,EAAKgB,I,EAAM;AACd,aAAO,KAAKxB,WAAL,CAAiByB,IAAjB,MAAyBjB,GAAzB,EAAgCgB,IAAhC,CAAP;AACD;;;wBAGGhB,G,EAAKgB,I,EAAM;AACb,aAAO,KAAKxB,WAAL,CAAiB0B,GAAjB,CAAwB,KAAK3B,OAA7B,SAAwCS,GAAxC,EAA+CgB,IAA/C,CAAP;AACD;;;2BAGMhB,G,EAAK;AACV,aAAO,KAAKR,WAAL,CAAiB2B,MAAjB,CAA2B,KAAK5B,OAAhC,SAA2CS,GAA3C,CAAP;AACD;;;;;;AAGH,IAAMoB,UAAU,GAAG,IAAI9B,UAAJ,EAAnB;AACA,eAAe8B,UAAf","sourcesContent":["import axios from 'axios';\n\nclass HTTPClient {\n    baseURL = ''\n\n    constructor(){\n        this.baseURL = `https://anapioficeandfire.com/api`;\n        this.axiosClient = axios.create();\n        this.token = '';\n\n        // Add a request interceptor\n        this.axiosClient.interceptors.request.use(\n            (request) =>{\n                const method = request.method.toUpperCase();\n                const url = request.url.replace(this.baseURL,'');\n                // console.log(`Request: ${method} ${url}`);\n                return request;\n            },\n            (error) =>{\n                console.log(error);\n                return Promise.reject(error);\n            }\n        )\n\n        // Add a response interceptor\n        this.axiosClient.interceptors.response.use(\n            (response) => {\n                const { status, statusText } = response;\n                // console.log(`Response: ${status} ${statusText}`);\n                return response;\n            },\n            (error) => {\n                return Promise.reject(error);\n            }\n        );\n\n    }\n\n    SetAuthenticationCallback(callback){\n        this.callback = callback;\n    }\n\n    SetAuthenticationToken(token){\n        this.token = token;\n        this.axiosClient.defaults.headers.common['Authentication-Token'] = token;\n    }\n    /** This method executes a REST GET request */\n    Get(url) {\n      return this.axiosClient.get(`${url}`);\n    }\n  \n    Patch(url) {\n      return this.axiosClient.patch(`${url}`);\n    }\n  \n    /** This method executes a REST POST request */\n    Post(url, data) {\n      return this.axiosClient.post(`${url}`, data);\n    }\n  \n    /** This method executes a REST PUT request */\n    Put(url, data) {\n      return this.axiosClient.put(`${this.baseURL}/${url}`, data);\n    }\n  \n    /** This method executes a REST DELETE request */\n    Delete(url) {\n      return this.axiosClient.delete(`${this.baseURL}/${url}`);\n    }\n  }\n  \n  const httpClient = new HTTPClient();\n  export default httpClient;"]},"metadata":{},"sourceType":"module"}