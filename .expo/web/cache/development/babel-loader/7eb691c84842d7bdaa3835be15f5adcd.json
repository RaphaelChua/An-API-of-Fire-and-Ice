{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/raphaelchua/Documents/GITHUB_PROJECTS/An-API-of-Fire-and-Ice/src/routes/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport DetailScreen from \"../screens/DetailScreen\";\nvar Stack = createStackNavigator();\n\nvar Routes = function (_Component) {\n  _inherits(Routes, _Component);\n\n  var _super = _createSuper(Routes);\n\n  function Routes() {\n    _classCallCheck(this, Routes);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Routes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 44\n        }\n      }), React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"List\",\n        component: HomeScreen,\n        options: {\n          title: 'List of Characters',\n          headerStyle: {\n            backgroundColor: '#f4511e'\n          },\n          headerTitleAlign: 'center',\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Details\",\n        component: DetailScreen,\n        options: {\n          title: 'Character Details',\n          headerStyle: {\n            backgroundColor: '#f4511e'\n          },\n          headerTitleAlign: 'center',\n          headerTintColor: '#fff',\n          headerTitleStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Routes;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\nexport default Routes;","map":{"version":3,"sources":["/Users/raphaelchua/Documents/GITHUB_PROJECTS/An-API-of-Fire-and-Ice/src/routes/index.js"],"names":["React","Component","NavigationContainer","createStackNavigator","HomeScreen","DetailScreen","Stack","Routes","styles","container","Platform","OS","title","headerStyle","backgroundColor","headerTitleAlign","headerTintColor","headerTitleStyle","fontWeight","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;;;;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;IAEMI,M;;;;;;;;;;;;;6BAEM;AACJ,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD/B,EAEI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AACA,QAAA,SAAS,EAAEP,UADX;AAEA,QAAA,OAAO,EAAE;AACLQ,UAAAA,KAAK,EAAE,oBADF;AAELC,UAAAA,WAAW,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR,WAFR;AAKLC,UAAAA,gBAAgB,EAAC,QALZ;AAMHC,UAAAA,eAAe,EAAE,MANd;AAOHC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,UAAU,EAAE;AADI;AAPf,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAgBI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAG,SAArB;AACA,QAAA,SAAS,EAAEb,YADX;AAEA,QAAA,OAAO,EAAE;AACPO,UAAAA,KAAK,EAAE,mBADA;AAEPC,UAAAA,WAAW,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR,WAFN;AAKPC,UAAAA,gBAAgB,EAAC,QALV;AAMLC,UAAAA,eAAe,EAAE,MANZ;AAOLC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,UAAU,EAAE;AADI;AAPb,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ,CAFJ,CADJ;AAsCH;;;;EAzCgBjB,S;;AA4CrB,IAAMO,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,IAAI,EAAE,CADG;AAETP,IAAAA,eAAe,EAAE;AAFR;AADkB,CAAlB,CAAf;AAOE,eAAeP,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport DetailScreen from '../screens/DetailScreen';\n\nconst Stack = createStackNavigator();\n\nclass Routes extends Component {\n\n    render(){\n        return (\n            <View style={styles.container}>\n                 {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n                <NavigationContainer>\n                    <Stack.Navigator>\n\n                        <Stack.Screen name=\"List\" \n                        component={HomeScreen}\n                        options={{\n                            title: 'List of Characters',\n                            headerStyle: {\n                                backgroundColor: '#f4511e',\n                              },\n                            headerTitleAlign:'center',\n                              headerTintColor: '#fff',\n                              headerTitleStyle: {\n                                fontWeight: 'bold',\n                              },\n                          }}\n                        />\n                        <Stack.Screen name = \"Details\"\n                        component={DetailScreen}\n                        options={{\n                          title: 'Character Details',\n                          headerStyle: {\n                              backgroundColor: '#f4511e',\n                            },\n                          headerTitleAlign:'center',\n                            headerTintColor: '#fff',\n                            headerTitleStyle: {\n                              fontWeight: 'bold',\n                            },\n                        }}\n                        />\n                    </Stack.Navigator>\n                </NavigationContainer>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n    },\n  });\n\n  export default Routes;"]},"metadata":{},"sourceType":"module"}