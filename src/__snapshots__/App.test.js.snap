// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render App without crashing 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaView
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onOpen={[Function]}
            onTransitionStart={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 0.01,
                    "restSpeedThreshold": 0.01,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 0.01,
                    "restSpeedThreshold": 0.01,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                  "marginTop": 64,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View>
                        <Modal
                          animationType="none"
                          hardwareAccelerated={false}
                          onRequestClose={[Function]}
                          supportedOrientations={
                            Array [
                              "landscape",
                              "portrait",
                            ]
                          }
                          transparent={true}
                          visible={false}
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "bottom": 0,
                                  "flex": 1,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                },
                                Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.25)",
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "bottom": 0,
                                  "justifyContent": "center",
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            >
                              <ActivityIndicator
                                animating={true}
                                color="white"
                                hidesWhenStopped={true}
                                size="large"
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                    },
                                    Object {},
                                  ]
                                }
                              />
                              <View
                                style={
                                  Array [
                                    Object {
                                      "alignItems": "center",
                                      "bottom": 0,
                                      "flex": 1,
                                      "justifyContent": "center",
                                      "left": 0,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 20,
                                        "fontWeight": "bold",
                                        "height": 50,
                                        "top": 80,
                                      },
                                      Object {
                                        "color": "#FFF",
                                      },
                                    ]
                                  }
                                >
                                  Loading ...
                                </Text>
                              </View>
                            </View>
                          </View>
                        </Modal>
                        <RCTScrollView
                          data={Array []}
                          disableVirtualization={false}
                          getItem={[Function]}
                          getItemCount={[Function]}
                          horizontal={false}
                          initialNumToRender={10}
                          keyExtractor={[Function]}
                          maxToRenderPerBatch={10}
                          onContentSizeChange={[Function]}
                          onEndReachedThreshold={2}
                          onLayout={[Function]}
                          onMomentumScrollEnd={[Function]}
                          onScroll={[Function]}
                          onScrollBeginDrag={[Function]}
                          onScrollEndDrag={[Function]}
                          removeClippedSubviews={false}
                          renderItem={[Function]}
                          scrollEventThrottle={50}
                          stickyHeaderIndices={Array []}
                          updateCellsBatchingPeriod={50}
                          viewabilityConfigCallbackPairs={Array []}
                          windowSize={21}
                        >
                          <View />
                        </RCTScrollView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          onLayout={[Function]}
          pointerEvents="box-none"
          style={null}
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#f4511e",
                  "borderBottomColor": "rgb(224, 224, 224)",
                  "flex": 1,
                  "shadowColor": "rgb(224, 224, 224)",
                  "shadowOffset": Object {
                    "height": 0.5,
                    "width": 0,
                  },
                  "shadowOpacity": 0.85,
                  "shadowRadius": 0,
                }
              }
            />
          </View>
          <View
            pointerEvents="box-none"
            style={
              Object {
                "height": 64,
                "maxHeight": undefined,
                "minHeight": undefined,
                "opacity": undefined,
                "transform": undefined,
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "height": 20,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "marginHorizontal": 18,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  accessibilityRole="header"
                  numberOfLines={1}
                  onLayout={[Function]}
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 17,
                      "fontWeight": "bold",
                    }
                  }
                >
                  List of Characters
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaView>
  </View>
</View>
`;
